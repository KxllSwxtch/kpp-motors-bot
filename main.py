import telebot
import psycopg2
import os
import re
import requests
import locale
import datetime
import logging
import urllib.parse

from telebot import types
from dotenv import load_dotenv
from urllib.parse import urlparse, parse_qs

CALCULATE_CAR_TEXT = "–†–∞—Å—á—ë—Ç –ê–≤—Ç–æ–º–æ–±–∏–ª—è"
DEALER_COMMISSION = 0.02  # 2%


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ë–î
DATABASE_URL = "postgres://uea5qru3fhjlj:p44343a46d4f1882a5ba2413935c9b9f0c284e6e759a34cf9569444d16832d4fe@c97r84s7psuajm.cluster-czrs8kj4isg7.us-east-1.rds.amazonaws.com:5432/d9pr93olpfl9bj"


# Configure logging
logging.basicConfig(
    filename="bot.log",
    level=logging.INFO,
    format="%(asctime)s - %(levelname)s - %(message)s",
)

# Load keys from .env file
load_dotenv()
bot_token = os.getenv("BOT_TOKEN")
bot = telebot.TeleBot(bot_token)

# Set locale for number formatting
locale.setlocale(locale.LC_ALL, "en_US.UTF-8")

# Storage for the last error message ID
last_error_message_id = {}

# global variables
car_data = {}
car_id_external = ""
total_car_price = 0
usd_rate = 0
users = set()
admins = [7311593407, 728438182]
car_month = None
car_year = None

vehicle_id = None
vehicle_no = None


def print_message(message):
    print("\n\n##############")
    print(f"{message}")
    print("##############\n\n")
    return None


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–º–∞–Ω–¥ –º–µ–Ω—é
def set_bot_commands():
    commands = [
        types.BotCommand("start", "–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"),
        types.BotCommand("cbr", "–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç"),
        # types.BotCommand("stats", "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"),
    ]
    bot.set_my_commands(commands)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç —Å API
def get_currency_rates():
    global usd_rate

    print_message("–ü–û–õ–£–ß–ê–ï–ú –ö–£–†–° –¶–ë")

    url = "https://www.cbr-xml-daily.ru/daily_json.js"
    response = requests.get(url)
    data = response.json()

    eur = data["Valute"]["EUR"]["Value"] + (
        data["Valute"]["EUR"]["Value"] * DEALER_COMMISSION
    )
    usd = data["Valute"]["USD"]["Value"] + (
        data["Valute"]["USD"]["Value"] * DEALER_COMMISSION
    )
    krw = (
        data["Valute"]["KRW"]["Value"]
        + (data["Valute"]["KRW"]["Value"] * DEALER_COMMISSION)
    ) / data["Valute"]["KRW"]["Nominal"]
    cny = data["Valute"]["CNY"]["Value"] + (
        data["Valute"]["CNY"]["Value"] * DEALER_COMMISSION
    )

    usd_rate = usd

    rates_text = (
        f"EUR: <b>{eur:.2f} ‚ÇΩ</b>\n"
        f"USD: <b>{usd:.2f} ‚ÇΩ</b>\n"
        f"KRW: <b>{krw:.2f} ‚ÇΩ</b>\n"
        f"CNY: <b>{cny:.2f} ‚ÇΩ</b>"
    )

    return rates_text


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /cbr
@bot.message_handler(commands=["cbr"])
def cbr_command(message):
    try:
        rates_text = get_currency_rates()

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(
            types.InlineKeyboardButton(
                "–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è", callback_data="calculate_another"
            )
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫—É—Ä—Å–∞–º–∏ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        bot.send_message(
            message.chat.id, rates_text, reply_markup=keyboard, parse_mode="HTML"
        )
    except Exception as e:
        bot.send_message(
            message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç: {e}")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /currencyrates
@bot.message_handler(commands=["currencyrates"])
def currencyrates_command(message):
    bot.send_message(message.chat.id, "–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç: ...")


# Main menu creation function
def main_menu():
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    keyboard.add(
        types.KeyboardButton(CALCULATE_CAR_TEXT),
        types.KeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—É"),
        types.KeyboardButton("–û –Ω–∞—Å"),
        types.KeyboardButton("Telegram-–∫–∞–Ω–∞–ª"),
        types.KeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å –≤ WhatsApp"),
        types.KeyboardButton("Instagram"),
        types.KeyboardButton("Tik-Tok"),
        types.KeyboardButton("Facebook"),
    )
    return keyboard


# Start command handler
@bot.message_handler(commands=["start"])
def send_welcome(message):
    get_currency_rates()

    user = message.from_user
    user_first_name = user.first_name

    welcome_message = (
        f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user_first_name}!\n\n"
        "–Ø –±–æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ KPP Motors. –Ø –ø–æ–º–æ–≥—É –≤–∞–º —Ä–∞—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–Ω—Ä–∞–≤–∏–≤—à–µ–≥–æ—Å—è –≤–∞–º –∞–≤—Ç–æ–º–æ–±–∏–ª—è –∏–∑ –Æ–∂–Ω–æ–π –ö–æ—Ä–µ–∏ –¥–æ –í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫–∞\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ"
    )
    bot.send_message(message.chat.id, welcome_message, reply_markup=main_menu())


# Error handling function
def send_error_message(message, error_text):
    global last_error_message_id

    # Remove previous error message if it exists
    if last_error_message_id.get(message.chat.id):
        try:
            bot.delete_message(message.chat.id, last_error_message_id[message.chat.id])
        except Exception as e:
            logging.error(f"Error deleting message: {e}")

    # Send new error message and store its ID
    error_message = bot.reply_to(message, error_text, reply_markup=main_menu())
    last_error_message_id[message.chat.id] = error_message.id
    logging.error(f"Error sent to user {message.chat.id}: {error_text}")


def get_car_info(url):
    global car_id_external, vehicle_no, vehicle_id, car_year, car_month

    # driver = create_driver()

    car_id_match = re.findall(r"\d+", url)
    car_id = car_id_match[0]
    car_id_external = car_id

    url = f"https://api.encar.com/v1/readside/vehicle/{car_id}"

    headers = {
        "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",
        "Referer": "http://www.encar.com/",
        "Cache-Control": "max-age=0",
        "Connection": "keep-alive",
    }

    response = requests.get(url, headers=headers).json()

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—é
    car_price = str(response["advertisement"]["price"])
    car_date = response["category"]["yearMonth"]

    year = car_date[2:4]
    month = car_date[4:]

    car_year = year
    car_month = month

    car_engine_displacement = str(response["spec"]["displacement"])
    car_type = response["spec"]["bodyName"]

    # –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ —Å—Ç—Ä–∞—Ö–æ–≤—ã–º –≤—ã–ø–ª–∞—Ç–∞–º
    vehicle_no = response["vehicleNo"]
    vehicle_id = response["vehicleId"]

    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º
    formatted_car_date = f"01{month}{year}"
    formatted_car_type = "crossover" if car_type == "SUV" else "sedan"

    print_message(
        f"ID: {car_id}\nType: {formatted_car_type}\nDate: {formatted_car_date}\nCar Engine Displacement: {car_engine_displacement}\nPrice: {car_price} KRW"
    )

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É
    conn = psycopg2.connect(DATABASE_URL, sslmode="require")
    cursor = conn.cursor()
    cursor.execute(
        """
        INSERT INTO car_info (car_id, date, engine_volume, price, car_type)
        VALUES (%s, %s, %s, %s, %s)
        ON CONFLICT (car_id) DO NOTHING
        """,
        (
            car_id,
            formatted_car_date,
            car_engine_displacement,
            car_price,
            formatted_car_type,
        ),
    )
    conn.commit()
    cursor.close()
    conn.close()
    print("–ê–≤—Ç–æ–º–æ–±–∏–ª—å –±—ã–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")

    new_url = f"https://plugin-back-versusm.amvera.io/car-ab-korea/{car_id}?price={car_price}&date={formatted_car_date}&volume={car_engine_displacement}"

    return [new_url, "", formatted_car_date]


# Function to calculate the total cost
def calculate_cost(link, message):
    global car_data, car_id_external, car_month, car_year

    print_message("–ó–ê–ü–†–û–° –ù–ê –†–ê–°–ß–Å–¢ –ê–í–¢–û–ú–û–ë–ò–õ–Ø")

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ ID
    processing_message = bot.send_message(
        message.chat.id, "–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –¥–∞–Ω–Ω—ã–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ ‚è≥"
    )

    car_id = None

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Å—ã–ª–∫–∏ –Ω–∞ –º–æ–±–∏–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é
    if "fem.encar.com" in link:
        car_id_match = re.findall(r"\d+", link)
        if car_id_match:
            car_id = car_id_match[0]  # Use the first match of digits
            car_id_external = car_id
            link = f"https://fem.encar.com/cars/detail/{car_id}"
        else:
            send_error_message(message, "üö´ –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å carid –∏–∑ —Å—Å—ã–ª–∫–∏.")
            return
    else:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º carid —Å URL encar
        parsed_url = urlparse(link)
        query_params = parse_qs(parsed_url.query)
        car_id = query_params.get("carid", [None])[0]

    result = get_car_info(link)
    new_url, car_title, formatted_car_date = result

    if not new_url and car_title:
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(
            types.InlineKeyboardButton(
                "–ù–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—É", url="https://t.me/KPP_Motorss"
            )
        )
        keyboard.add(
            types.InlineKeyboardButton(
                "–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥—Ä—É–≥–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è",
                callback_data="calculate_another",
            )
        )
        bot.send_message(
            message.chat.id, car_title, parse_mode="Markdown", reply_markup=keyboard
        )
        bot.delete_message(message.chat.id, processing_message.message_id)
        return

    # –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–æ–≤–∞—è —Å—Å—ã–ª–∫–∞
    if new_url:
        try:
            response = requests.get(new_url)
            json_response = response.json()
        except requests.RequestException as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
            send_error_message(
                message,
                "üö´ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Å—ã–ª–∫—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
            )
            bot.delete_message(message.chat.id, processing_message.message_id)
            return
        except ValueError:
            logging.error("–ü–æ–ª—É—á–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON.")
            send_error_message(
                message,
                "üö´ –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Å—ã–ª–∫—É –∏–ª–∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.",
            )
            bot.delete_message(message.chat.id, processing_message.message_id)
            return

        car_data = json_response

        result = json_response.get("result", {})
        car = result.get("car", {})
        price = result.get("price", {}).get("car", {}).get("krw", 0)

        engine_volume_raw = car.get("engineVolume", None)
        engine_volume = re.sub(r"\D+", "", engine_volume_raw)

        if not (car_year and engine_volume and price):
            logging.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ JSON.")
            bot.send_message(
                message.chat.id,
                "üö´ –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Å—ã–ª–∫—É.",
            )
            bot.delete_message(message.chat.id, processing_message.message_id)
            return

        # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
        formatted_car_year = f"20{car_year}"
        engine_volume_formatted = f"{format_number(int(engine_volume))} cc"
        age_formatted = calculate_age(int(formatted_car_year), car_month)

        grand_total = result.get("price", {}).get("grandTotal", 0)
        recycling_fee = (
            result.get("price", {})
            .get("russian", {})
            .get("recyclingFee", {})
            .get("rub", 0)
        )
        duty_cleaning = (
            result.get("price", {})
            .get("korea", {})
            .get("dutyCleaning", {})
            .get("rub", 0)
        )

        total_cost = (
            int(grand_total) - int(recycling_fee) - int(duty_cleaning)
        ) + 110000
        total_cost_formatted = format_number(
            total_cost + (total_cost * DEALER_COMMISSION)
        )
        price_formatted = format_number(price)

        current_rub_krw_rate = (
            json_response.get("result", {}).get("rates", {}).get("rub", 0)
        )

        preview_link = f"https://fem.encar.com/cars/detail/{car_id}"

        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        result_message = (
            f"–í–æ–∑—Ä–∞—Å—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—è: {age_formatted}\n"
            f"–°—Ç–æ–∏–º–æ—Å—Ç—å –≤ –Æ–∂–Ω–æ–π –ö–æ—Ä–µ–µ (–≤ –∫–æ—Ä–µ–π—Å–∫–∏—Ö –≤–æ–Ω–∞—Ö): {price_formatted} ‚Ç©\n"
            f"–û–±—ä—ë–º –¥–≤–∏–≥–∞—Ç–µ–ª—è: {engine_volume_formatted}\n\n"
            f"–°—Ç–æ–∏–º–æ—Å—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è –ø–æ–¥ –∫–ª—é—á –¥–æ –í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫–∞ –Ω–∞ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç: <b>{total_cost_formatted} ‚ÇΩ</b>\n\n"
            f"–¢–∞–∫ –∂–µ –ø—Ä–∏–Ω–∏–º–∞–µ–º –æ–ø–ª–∞—Ç—É –ø–æ <b>USDT</b>.\n–î–ª—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞—à–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É @KPP_Motorss\n\n"
            f"–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å —Ä—É–±–ª—è –∫ –∫–æ—Ä–µ–π—Å–∫–æ–π –≤–æ–Ω–µ: \n<b>{current_rub_krw_rate} ‚Ç©</b>\n"
            f"–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–µ–∫—É—â–µ–≥–æ –∫—É—Ä—Å–∞ –¶–ë –Ω–∞–∂–º–∏—Ç–µ —Å—é–¥–∞ /cbr \n\n"
            f"üîó <a href='{preview_link}'>–°—Å—ã–ª–∫–∞ –Ω–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—å</a>\n\n"
            f"–ï—Å–ª–∏ –¥–∞–Ω–Ω–æ–µ –∞–≤—Ç–æ –ø–æ–ø–∞–¥–∞–µ—Ç –ø–æ–¥ —Å–∞–Ω–∫—Ü–∏–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —É—Ç–æ—á–Ω–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –≤–∞—à—É —Å—Ç—Ä–∞–Ω—É —É –º–µ–Ω–µ–¥–∂–µ—Ä–∞ @KPP_Motorss\n\n"
            "üîó <a href='https://t.me/TELEGRAM_CHANNEL'>–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª</a>\n"
        )

        # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –¥–∞–ª—å–Ω–µ–π—à–∏–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(
            types.InlineKeyboardButton("–î–µ—Ç–∞–ª–∏ —Ä–∞—Å—á—ë—Ç–∞", callback_data="detail")
        )
        keyboard.add(
            types.InlineKeyboardButton(
                "–í—ã–ø–ª–∞—Ç—ã –ø–æ –î–¢–ü",
                callback_data="technical_report",
            )
        )
        keyboard.add(
            types.InlineKeyboardButton(
                "–ù–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—É", url="https://t.me/KPP_Motorss"
            )
        )
        keyboard.add(
            types.InlineKeyboardButton(
                "–†–∞—Å—á—ë—Ç –¥—Ä—É–≥–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è",
                callback_data="calculate_another",
            )
        )

        bot.send_message(
            message.chat.id,
            result_message,
            parse_mode="HTML",
            reply_markup=keyboard,
        )

        bot.delete_message(
            message.chat.id, processing_message.message_id
        )  # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–µ—Ä–µ–¥–∞—á–µ –¥–∞–Ω–Ω—ã—Ö –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É

    else:
        send_error_message(
            message,
            "üö´ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Å—ã–ª–∫—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
        )
        bot.delete_message(message.chat.id, processing_message.message_id)


# Function to get insurance total
def get_insurance_total():
    global car_id_external, vehicle_no, vehicle_id

    print_message("[–ó–ê–ü–†–û–°] –¢–ï–•–ù–ò–ß–ï–°–ö–ò–ô –û–¢–ß√ã–¢ –û–ë –ê–í–¢–û–ú–û–ë–ò–õ–ï")

    formatted_vehicle_no = urllib.parse.quote(str(vehicle_no).strip())
    url = f"https://api.encar.com/v1/readside/record/vehicle/{str(vehicle_id)}/open?vehicleNo={formatted_vehicle_no}"

    try:
        headers = {
            "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",
            "Referer": "http://www.encar.com/",
            "Cache-Control": "max-age=0",
            "Connection": "keep-alive",
        }

        response = requests.get(url, headers)
        json_response = response.json()

        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
        damage_to_my_car = json_response["myAccidentCost"]
        damage_to_other_car = json_response["otherAccidentCost"]

        print(
            f"–í—ã–ø–ª–∞—Ç—ã –ø–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–º—É –∞–≤—Ç–æ–º–æ–±–∏–ª—é: {format_number(damage_to_my_car)}"
        )
        print(f"–í—ã–ø–ª–∞—Ç—ã –¥—Ä—É–≥–æ–º—É –∞–≤—Ç–æ–º–æ–±–∏–ª—é: {format_number(damage_to_other_car)}")

        return [format_number(damage_to_my_car), format_number(damage_to_other_car)]

    except Exception as e:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return ["", ""]


# Callback query handler
@bot.callback_query_handler(func=lambda call: True)
def handle_callback_query(call):
    global car_data, car_id_external, usd_rate

    if call.data.startswith("detail"):
        print_message("[–ó–ê–ü–†–û–°] –î–ï–¢–ê–õ–ò–ó–ê–¶–ò–Ø –†–ê–°–ß√ã–¢–ê")

        details = {
            "car_price_korea": car_data.get("result")["price"]["car"]["rub"],
            "dealer_fee": car_data.get("result")["price"]["korea"]["ab"]["rub"],
            "korea_logistics": car_data.get("result")["price"]["korea"]["logistic"][
                "rub"
            ],
            "customs_fee": car_data.get("result")["price"]["korea"]["dutyCleaning"][
                "rub"
            ],
            "delivery_fee": car_data.get("result")["price"]["korea"]["delivery"]["rub"],
            "dealer_commission": car_data.get("result")["price"]["korea"][
                "dealerCommission"
            ]["rub"],
            "russiaDuty": car_data.get("result")["price"]["russian"]["duty"]["rub"],
            "recycle_fee": car_data.get("result")["price"]["russian"]["recyclingFee"][
                "rub"
            ],
            "registration": car_data.get("result")["price"]["russian"]["registration"][
                "rub"
            ],
            "sbkts": car_data.get("result")["price"]["russian"]["sbkts"]["rub"],
            "svhAndExpertise": car_data.get("result")["price"]["russian"][
                "svhAndExpertise"
            ]["rub"],
            "delivery": car_data.get("result")["price"]["russian"]["delivery"]["rub"],
        }

        car_price_formatted = format_number(
            int(details["car_price_korea"])
            + (int(details["car_price_korea"] * DEALER_COMMISSION))
        )
        dealer_fee_formatted = format_number(35000)
        delivery_fee_formatted = format_number((750 * usd_rate) + 10000)
        dealer_commission_formatted = format_number(
            int(details["dealer_commission"]) + 30000
        )
        recycling_fee_formatted = format_number(details["recycle_fee"])
        russia_duty_formatted = format_number(
            int(details["russiaDuty"]) - int(details["recycle_fee"])
        )

        detail_message = (
            f"–°—Ç–æ–∏–º–æ—Å—Ç—å –∞–≤—Ç–æ: <b>{car_price_formatted} ‚ÇΩ</b>\n\n"
            f"–£—Å–ª—É–≥–∏ –ë—Ä–æ–∫–µ—Ä–∞ (–°–í–•, –°–ë–ö–¢–°): <b>{format_number(115000)} ‚ÇΩ</b>\n\n"
            f"–î–æ—Å—Ç–∞–≤–∫–∞ –¥–æ –í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫–∞: <b>{delivery_fee_formatted} ‚ÇΩ</b>\n\n"
            f"–≠–∫—Å–ø–æ—Ç–Ω–∞—è –¥–µ–∫–ª–∞—Ä–∞—Ü–∏—è –∏ –ª–æ–≥–∏—Å—Ç–∏–∫–∞ –ø–æ –Æ–∂–Ω–æ–π –ö–æ—Ä–µ–µ: <b>{dealer_commission_formatted} ‚ÇΩ</b>\n\n"
            f"–ï–¥–∏–Ω–∞—è —Ç–∞–º–æ–∂–µ–Ω–Ω–∞—è —Å—Ç–∞–≤–∫–∞ (–ï–¢–°): <b>{russia_duty_formatted} ‚ÇΩ</b>\n\n"
            f"–£—Ç–∏–ª–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–±–æ—Ä: <b>{recycling_fee_formatted} ‚ÇΩ</b>\n\n"
            f"<b>–î–æ—Å—Ç–∞–≤–∫—É –¥–æ –≤–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞ —É—Ç–æ—á–Ω—è–π—Ç–µ —É –º–µ–Ω–µ–¥–∂–µ—Ä–∞ @KPP_Motorss</b>\n\n"
        )

        # Inline buttons for further actions
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(
            types.InlineKeyboardButton(
                "–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥—Ä—É–≥–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è",
                callback_data="calculate_another",
            )
        )
        keyboard.add(
            types.InlineKeyboardButton(
                "–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º", url="https://t.me/KPP_Motorss"
            )
        )

        bot.send_message(
            call.message.chat.id,
            detail_message,
            parse_mode="HTML",
            reply_markup=keyboard,
        )

    elif call.data == "technical_report":
        bot.send_message(
            call.message.chat.id,
            "–ó–∞–ø—Ä–∞—à–∏–≤–∞—é –æ—Ç—á—ë—Ç –ø–æ –î–¢–ü. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ ‚è≥",
        )

        # Retrieve insurance information
        insurance_info = get_insurance_total()

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–∫–∏
        if (
            insurance_info is None
            or "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö" in insurance_info[0]
            or "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö" in insurance_info[1]
        ):
            error_message = (
                "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —Å—Ç—Ä–∞—Ö–æ–≤—ã—Ö –≤—ã–ø–ª–∞—Ç–∞—Ö. \n\n"
                f'<a href="https://fem.encar.com/cars/report/accident/{car_id_external}">üîó –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç—Ä–∞—Ö–æ–≤—É—é –∏—Å—Ç–æ—Ä–∏—é –≤—Ä—É—á–Ω—É—é üîó</a>\n\n\n'
                f"<b>–ù–∞–π–¥–∏—Ç–µ –¥–≤–µ —Å—Ç—Ä–æ–∫–∏:</b>\n\n"
                f"Î≥¥ÌóòÏÇ¨Í≥† Ïù¥Î†• (ÎÇ¥Ï∞® ÌîºÌï¥) - –í—ã–ø–ª–∞—Ç—ã –ø–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–º—É –∞–≤—Ç–æ–º–æ–±–∏–ª—é\n"
                f"Î≥¥ÌóòÏÇ¨Í≥† Ïù¥Î†• (ÌÉÄÏ∞® Í∞ÄÌï¥) - –í—ã–ø–ª–∞—Ç—ã –¥—Ä—É–≥–∏–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –î–¢–ü"
            )

            # Inline buttons for further actions
            keyboard = types.InlineKeyboardMarkup()
            keyboard.add(
                types.InlineKeyboardButton(
                    "–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥—Ä—É–≥–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è",
                    callback_data="calculate_another",
                )
            )
            keyboard.add(
                types.InlineKeyboardButton(
                    "–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º", url="https://t.me/KPP_Motorss"
                )
            )

            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ
            bot.send_message(
                call.message.chat.id,
                error_message,
                parse_mode="HTML",
                reply_markup=keyboard,
            )
        else:
            current_car_insurance_payments = (
                "0" if len(insurance_info[0]) == 0 else insurance_info[0]
            )
            other_car_insurance_payments = (
                "0" if len(insurance_info[1]) == 0 else insurance_info[1]
            )

            # Construct the message for the technical report
            tech_report_message = (
                f"–°—Ç—Ä–∞—Ö–æ–≤—ã–µ –≤—ã–ø–ª–∞—Ç—ã –ø–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–º—É –∞–≤—Ç–æ–º–æ–±–∏–ª—é: \n<b>{current_car_insurance_payments} ‚Ç©</b>\n\n"
                f"–°—Ç—Ä–∞—Ö–æ–≤—ã–µ –≤—ã–ø–ª–∞—Ç—ã –¥—Ä—É–≥–∏–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –î–¢–ü: \n<b>{other_car_insurance_payments} ‚Ç©</b>\n\n"
                f'<a href="https://fem.encar.com/cars/report/inspect/{car_id_external}">üîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ö–µ–º—É –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–π –∫—É–∑–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ üîó</a>'
            )

            # Inline buttons for further actions
            keyboard = types.InlineKeyboardMarkup()
            keyboard.add(
                types.InlineKeyboardButton(
                    "–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥—Ä—É–≥–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è",
                    callback_data="calculate_another",
                )
            )
            keyboard.add(
                types.InlineKeyboardButton(
                    "–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º", url="https://t.me/KPP_Motorss"
                )
            )

            bot.send_message(
                call.message.chat.id,
                tech_report_message,
                parse_mode="HTML",
                reply_markup=keyboard,
            )

    elif call.data == "calculate_another":
        bot.send_message(
            call.message.chat.id,
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—å —Å —Å–∞–π—Ç–∞ www.encar.com:",
        )


@bot.message_handler(func=lambda message: True)
def handle_message(message):
    user_message = message.text.strip()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å"
    if user_message == CALCULATE_CAR_TEXT:
        bot.send_message(
            message.chat.id,
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—å —Å —Å–∞–π—Ç–∞ www.encar.com:",
        )

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Å—Å—ã–ª–∫–∏
    elif re.match(r"^https?://(www|fem)\.encar\.com/.*", user_message):
        calculate_cost(user_message, message)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥—Ä—É–≥–∏–µ –∫–æ–º–∞–Ω–¥—ã
    elif user_message == "–ù–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—É":
        bot.send_message(
            message.chat.id, "–í—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –ø–æ —Å—Å—ã–ª–∫–µ: @KPP_Motorss"
        )
    elif user_message == "–ù–∞–ø–∏—Å–∞—Ç—å –≤ WhatsApp":
        whatsapp_link = "https://wa.me/821076503034"  # –ö–æ—Å—Ç—è 1
        whatsapp_link_second = "https://wa.me/821072911701"  # –ö–æ—Å—Ç—è 2
        whatsapp_link_third = "https://wa.me/821035041522"  # –ï–ª–µ–Ω–∞

        message_text = f"{whatsapp_link} - –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω\n{whatsapp_link_second} - –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω 2\n{whatsapp_link_third} - –ï–ª–µ–Ω–∞ (English, ÌïúÍµ≠Ïñ¥)"

        bot.send_message(
            message.chat.id,
            message_text,
        )
    elif user_message == "–û –Ω–∞—Å":
        about_message = "KPP Motors\n–Æ–∂–Ω–æ–∫–æ—Ä–µ–π—Å–∫–∞—è —ç–∫—Å–ø–æ—Ä—Ç–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è.\n–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º—Å—è –Ω–∞ –ø–æ—Å—Ç–∞–≤–∫–∞—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –∏–∑ –Æ–∂–Ω–æ–π –ö–æ—Ä–µ–∏ –≤ —Å—Ç—Ä–∞–Ω—ã –°–ù–ì.\n–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã –±–æ–ª–µ–µ 5 –ª–µ—Ç.\n\n–ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—Å?\n‚Ä¢ –ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å –∏ —Å–∫–æ—Ä–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏.\n‚Ä¢ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –∫–∞–∂–¥–æ–º—É –∫–ª–∏–µ–Ω—Ç—É.\n‚Ä¢ –ü–æ–ª–Ω–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ —Å–¥–µ–ª–∫–∏.\n\nüí¨ –í–∞—à –ø—É—Ç—å –∫ –Ω–∞–¥–µ–∂–Ω—ã–º –∞–≤—Ç–æ–º–æ–±–∏–ª—è–º –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∑–¥–µ—Å—å!"
        bot.send_message(message.chat.id, about_message)
    elif user_message == "Telegram-–∫–∞–Ω–∞–ª":
        channel_link = "https://t.me/TELEGRAM CHANNEL"
        bot.send_message(
            message.chat.id, f"–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –Ω–∞—à Telegram-–∫–∞–Ω–∞–ª: {channel_link}"
        )
    elif user_message == "Instagram":
        instagram_link = "https://www.instagram.com/kpp_motors"
        bot.send_message(
            message.chat.id,
            f"–ü–æ—Å–µ—Ç–∏—Ç–µ –Ω–∞—à Instagram: {instagram_link}",
        )
    elif user_message == "Tik-Tok":
        tiktok_link = "https://www.tiktok.com/@kpp_motors"
        bot.send_message(
            message.chat.id,
            f"–°–ª–µ–¥–∏—Ç–µ –∑–∞ —Å–≤–µ–∂–∏–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –Ω–∞ –Ω–∞—à–µ–º TikTok: {tiktok_link}",
        )
    elif user_message == "Facebook":
        facebook_link = "https://www.facebook.com/share/1D8bg2xL1i/?mibextid=wwXIfr"
        bot.send_message(
            message.chat.id,
            f"KPP Motors –Ω–∞ Facebook: {facebook_link}",
        )
    else:
        bot.send_message(
            message.chat.id,
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—å —Å —Å–∞–π—Ç–∞ www.encar.com –∏–ª–∏ fem.encar.com.",
        )


# Utility function to calculate the age category
def calculate_age(year, month):
    # –£–±–∏—Ä–∞–µ–º –≤–µ–¥—É—â–∏–π –Ω–æ–ª—å —É –º–µ—Å—è—Ü–∞, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    month = int(month.lstrip("0")) if isinstance(month, str) else int(month)

    current_date = datetime.datetime.now()
    car_date = datetime.datetime(year=int(year), month=month, day=1)

    age_in_months = (
        (current_date.year - car_date.year) * 12 + current_date.month - car_date.month
    )

    if age_in_months < 36:
        return f"–î–æ 3 –ª–µ—Ç"
    elif 36 <= age_in_months < 60:
        return f"–æ—Ç 3 –¥–æ 5 –ª–µ—Ç"
    else:
        return f"–æ—Ç 5 –ª–µ—Ç"


def format_number(number):
    return locale.format_string("%d", number, grouping=True)


# Run the bot
if __name__ == "__main__":
    # initialize_db()
    set_bot_commands()
    bot.polling(non_stop=True)
